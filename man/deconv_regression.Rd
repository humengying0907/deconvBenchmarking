% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deconv_regression.R
\name{deconv_regression}
\alias{deconv_regression}
\title{Regression-based deconvolution}
\usage{
deconv_regression(
  methods,
  bulk_expr,
  sigMatrix_list,
  cibersort_path = NULL,
  QN_cibersort = F,
  skip_raw_cibersort = T,
  scExpr = NULL,
  scMeta = NULL,
  colnames_of_cellType = NA,
  colnames_of_sample = NA,
  normalize_MuSiC = F,
  skip_raw_wRLM = TRUE,
  weight_wRLM = TRUE,
  intercept_wRLM = TRUE,
  scale_wRLM = FALSE,
  QN_wRLM = FALSE,
  skip_raw_RPC = TRUE,
  maxit_RPC = 100,
  n.core = 1
)
}
\arguments{
\item{methods}{a character vector indicating which methods to use. Use list_deconv_regression() to check for available method names.}

\item{bulk_expr}{bulk expression to deconvolute, with genes in rows and samples in columns}

\item{sigMatrix_list}{a list of signature matrix}

\item{cibersort_path}{path to CIBERSORT.R. This argument is required for 'cibersort' method}

\item{QN_cibersort}{a logical variable determining whether to quantile normalize the input matrix. Default = F. This argument is required for 'cibersort' method}

\item{skip_raw_cibersort}{a logical variable indicating whether to skip the signature matrix named 'raw', which corresponds to the raw reference matrix without gene filtering.
Setting this argument to TRUE is recommended to save computation time and resources. This argument is required for 'cibersort' method}

\item{scExpr}{single cell expression matrix used to simulate bulk data, with genes in rows and cells in columns. This argument is required for 'MuSiC' method}

\item{scMeta}{dataframe that stores annotation info of each cells, rownames of scMeta should be equal to colnames of scExpr. This argument is required for 'MuSiC' method}

\item{colnames_of_cellType}{column name that corresponds to cellType in scMeta. This argument is required for 'MuSiC' method}

\item{colnames_of_sample}{column name that corresponds to sampleID in scMeta. This argument is required for 'MuSiC' method}

\item{normalize_MuSiC}{MuSiC::music_prop() normalize argument. Default = F. This argument is required for 'MuSiC' method}

\item{skip_raw_wRLM}{a logical variable indicating whether to skip the signature matrix named 'raw', which corresponds to the raw reference matrix without gene filtering.
Setting this argument to TRUE is recommended to save computation time and resources. This argument is required for 'wRLM' method}

\item{weight_wRLM}{LinDeconSeq::deconSeq() argument, a logical variable determining whether to weight gene or not. Default = T. This argument is required for 'wRLM' method}

\item{intercept_wRLM}{LinDeconSeq::deconSeq() argument, a logical variable determining whether to add intercept when using robust linear regression. Default = T. This argument is required for 'wRLM' method}

\item{scale_wRLM}{LinDeconSeq::deconSeq() argument, a logical variable determining whether to scale bulk gene expression or not. Default = T. This argument is required for 'wRLM' method}

\item{QN_wRLM}{LinDeconSeq::deconSeq() argument, a logical variable determining whether to quantile normalize bulk expression profile. Default = T. This argument is required for 'wRLM' method}

\item{skip_raw_RPC}{a logical variable indicating whether to skip the signature matrix named 'raw', which corresponds to the raw reference matrix without gene filtering.
Setting this argument to TRUE is recommended to save computation time and resources. This argument is required for 'RPC' method}

\item{maxit_RPC}{EpiDISH::epidish() argument, an integer indicating the limit of the number of IWLS iterations. Default = 100. This argument is required for RPC method}

\item{n.core}{number of cores to use for parallel programming. Default = 1}
}
\value{
a list of deconvolution results obtained using different input signature matrices and different regression methods. The results are named using the format
'RefBased_' + regression method, followed by the name of the respective input signature matrix
}
\description{
Generate a list of regression-based deconvolution results with user-selected regression methods
}
\examples{
\dontrun{
# create sigMatrix_list using marker genes derived from DE analysis limma and scran
sigMatrix_list = refMatrix(methods = c('limma','scran'), scExpr = scExpr, cell_type_labels = scMeta$cell_type)

# explore other methods outside of the provided DE-based methods
help("pre_refMatrix_autogeneS")
help("pre_refMatrix_cibersortx")

# include signature matrices generated from 'raw' methods for MuSiC, since MuSiC recommend to input scRNA profile without gene filtering
sigMatrix_list = refMatrix(methods = c('raw','limma','scran'),
                           scExpr = scExpr, cell_type_labels = scMeta$cell_type)

deconv_regression(methods = c('nnls','cibersort','MuSiC','wRLM','RPC'),
                  bulk_expr = bulk_expr,sigMatrix_list = sigMatrix_list,

                  # cibersort arguments
                  cibersort_path = 'scripts/',

                  # MuSiC arguments
                  scExpr = scExpr,scMeta = scMeta,colnames_of_cellType = 'cell_type',colnames_of_sample = 'sampleID',

                  n.core = 2)
}
}
